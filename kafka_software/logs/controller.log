[2025-06-28 08:50:26,911] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2025-06-28 08:50:26,944] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2025-06-28 08:50:26,947] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2025-06-28 08:50:26,973] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2025-06-28 08:50:26,977] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2025-06-28 08:50:26,980] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2025-06-28 08:50:26,982] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2025-06-28 08:50:26,992] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2025-06-28 08:50:26,997] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2025-06-28 08:50:27,003] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2025-06-28 08:50:27,008] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2025-06-28 08:50:27,009] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2025-06-28 08:50:27,009] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2025-06-28 08:50:27,009] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2025-06-28 08:50:27,010] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2025-06-28 08:50:27,012] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2025-06-28 08:50:27,012] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2025-06-28 08:50:27,013] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2025-06-28 08:50:27,013] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2025-06-28 08:50:27,014] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2025-06-28 08:50:27,027] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 08:50:27,029] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 08:50:27,038] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 08:50:27,038] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 08:50:27,038] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2025-06-28 08:50:27,038] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2025-06-28 08:50:27,041] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2025-06-28 08:50:27,041] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2025-06-28 08:50:27,051] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2025-06-28 08:50:27,052] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2025-06-28 08:50:27,052] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2025-06-28 08:50:27,052] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2025-06-28 08:50:27,055] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2025-06-28 08:50:27,074] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2025-06-28 08:50:27,543] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-T0UVI8B:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2025-06-28 08:50:32,081] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-06-28 08:50:32,083] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-06-28 08:52:41,439] INFO [Controller id=0] New topics: [Set(food_orders_topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(food_orders_topic,Some(aYCMdR_nS2CxrAC6Ebyfrw),Map(food_orders_topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2025-06-28 08:52:41,442] INFO [Controller id=0] New partition creation callback for food_orders_topic-0 (kafka.controller.KafkaController)
[2025-06-28 08:55:32,087] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-06-28 08:55:32,087] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-06-28 08:55:32,092] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2025-06-28 08:55:32,094] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-06-28 09:00:32,110] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-06-28 09:00:32,112] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-06-28 09:00:32,112] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2025-06-28 09:00:32,112] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-06-28 09:05:32,120] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-06-28 09:05:32,120] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-06-28 09:05:32,121] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2025-06-28 09:05:32,121] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-06-28 09:10:32,134] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-06-28 09:10:32,135] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-06-28 09:10:32,135] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2025-06-28 09:10:32,135] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-06-28 09:15:32,149] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-06-28 09:15:32,149] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-06-28 09:15:32,149] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2025-06-28 09:15:32,149] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-06-28 09:17:39,259] INFO [Controller id=0] New topics: [Set(food_order_topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(food_order_topic,Some(68lrXDbNSmed-9nOn1MQ2w),Map(food_order_topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2025-06-28 09:17:39,259] INFO [Controller id=0] New partition creation callback for food_order_topic-0 (kafka.controller.KafkaController)
[2025-06-28 09:17:39,284] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-T0UVI8B:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2025-06-28 09:17:39,286] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2025-06-28 09:17:39,293] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2025-06-28 09:20:32,152] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-06-28 09:20:32,152] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-06-28 09:20:32,153] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2025-06-28 09:20:32,153] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-06-28 09:25:32,168] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-06-28 09:25:32,168] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-06-28 09:25:32,169] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2025-06-28 09:25:32,169] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-06-28 09:26:06,725] DEBUG [Controller id=0] Delete topics listener fired for topics food_orders_topic to be deleted (kafka.controller.KafkaController)
[2025-06-28 09:26:06,727] INFO [Controller id=0] Starting topic deletion for topics food_orders_topic (kafka.controller.KafkaController)
[2025-06-28 09:26:06,732] INFO [Topic Deletion Manager 0] Handling deletion for topics food_orders_topic (kafka.controller.TopicDeletionManager)
[2025-06-28 09:26:06,737] INFO [Topic Deletion Manager 0] Deletion of topic food_orders_topic (re)started (kafka.controller.TopicDeletionManager)
[2025-06-28 09:26:06,840] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(food_orders_topic-0 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2025-06-28 09:26:06,846] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=food_orders_topic,Partition=0,Replica=0]. Halting deletion for topics Set(food_orders_topic) (kafka.controller.TopicDeletionManager)
[2025-06-28 09:26:06,848] INFO [Topic Deletion Manager 0] Halted deletion of topics food_orders_topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2025-06-28 09:26:06,848] INFO [Topic Deletion Manager 0] Handling deletion for topics food_orders_topic (kafka.controller.TopicDeletionManager)
[2025-06-28 09:26:06,850] DEBUG [Topic Deletion Manager 0] Retrying deletion of topics food_orders_topic since replicas [Topic=food_orders_topic,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2025-06-28 09:30:33,928] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2025-06-28 09:30:33,960] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2025-06-28 09:30:33,964] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2025-06-28 09:30:33,969] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2025-06-28 09:30:33,972] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2025-06-28 09:30:33,974] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2025-06-28 09:30:33,986] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 62) (kafka.controller.KafkaController)
[2025-06-28 09:30:34,007] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2025-06-28 09:30:34,022] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2025-06-28 09:30:34,025] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2025-06-28 09:30:34,026] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2025-06-28 09:30:34,026] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2025-06-28 09:30:34,026] INFO [Controller id=0] Current list of topics in the cluster: HashSet(food_orders_topic, food_order_topic) (kafka.controller.KafkaController)
[2025-06-28 09:30:34,026] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2025-06-28 09:30:34,030] INFO [Controller id=0] List of topics to be deleted: food_orders_topic (kafka.controller.KafkaController)
[2025-06-28 09:30:34,030] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2025-06-28 09:30:34,030] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2025-06-28 09:30:34,031] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(food_orders_topic), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2025-06-28 09:30:34,033] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2025-06-28 09:30:34,050] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 09:30:34,063] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 09:30:34,081] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 09:30:34,081] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=food_order_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=food_orders_topic,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 09:30:34,081] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2025-06-28 09:30:34,082] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2025-06-28 09:30:34,083] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(food_orders_topic-0 -> OfflinePartition, food_order_topic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2025-06-28 09:30:34,083] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2025-06-28 09:30:34,086] INFO [Topic Deletion Manager 0] Handling deletion for topics food_orders_topic (kafka.controller.TopicDeletionManager)
[2025-06-28 09:30:34,087] INFO [Topic Deletion Manager 0] Deletion of topic food_orders_topic (re)started (kafka.controller.TopicDeletionManager)
[2025-06-28 09:30:34,132] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2025-06-28 09:30:34,132] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2025-06-28 09:30:34,132] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2025-06-28 09:30:34,133] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2025-06-28 09:30:34,133] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2025-06-28 09:30:34,146] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2025-06-28 09:30:34,558] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-T0UVI8B:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2025-06-28 09:30:34,684] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(food_orders_topic-0 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2025-06-28 09:30:34,685] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=food_orders_topic,Partition=0,Replica=0]. Halting deletion for topics Set(food_orders_topic) (kafka.controller.TopicDeletionManager)
[2025-06-28 09:30:34,687] INFO [Topic Deletion Manager 0] Halted deletion of topics food_orders_topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2025-06-28 09:30:34,687] INFO [Topic Deletion Manager 0] Handling deletion for topics food_orders_topic (kafka.controller.TopicDeletionManager)
[2025-06-28 09:30:34,688] DEBUG [Topic Deletion Manager 0] Retrying deletion of topics food_orders_topic since replicas [Topic=food_orders_topic,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2025-06-28 09:42:22,109] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2025-06-28 09:42:22,149] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2025-06-28 09:42:22,152] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2025-06-28 09:42:22,159] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2025-06-28 09:42:22,166] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2025-06-28 09:42:22,174] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2025-06-28 09:42:22,214] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 83) (kafka.controller.KafkaController)
[2025-06-28 09:42:22,274] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2025-06-28 09:42:22,297] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2025-06-28 09:42:22,312] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2025-06-28 09:42:22,314] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2025-06-28 09:42:22,314] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2025-06-28 09:42:22,315] INFO [Controller id=0] Current list of topics in the cluster: HashSet(food_orders_topic, food_order_topic) (kafka.controller.KafkaController)
[2025-06-28 09:42:22,316] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2025-06-28 09:42:22,322] INFO [Controller id=0] List of topics to be deleted: food_orders_topic (kafka.controller.KafkaController)
[2025-06-28 09:42:22,322] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2025-06-28 09:42:22,323] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2025-06-28 09:42:22,323] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(food_orders_topic), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2025-06-28 09:42:22,332] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2025-06-28 09:42:22,367] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 09:42:22,414] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 09:42:22,473] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 09:42:22,473] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=food_order_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=food_orders_topic,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 09:42:22,473] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2025-06-28 09:42:22,480] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2025-06-28 09:42:22,482] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(food_orders_topic-0 -> OfflinePartition, food_order_topic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2025-06-28 09:42:22,483] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2025-06-28 09:42:22,493] INFO [Topic Deletion Manager 0] Handling deletion for topics food_orders_topic (kafka.controller.TopicDeletionManager)
[2025-06-28 09:42:22,495] INFO [Topic Deletion Manager 0] Deletion of topic food_orders_topic (re)started (kafka.controller.TopicDeletionManager)
[2025-06-28 09:42:22,548] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2025-06-28 09:42:22,549] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2025-06-28 09:42:22,549] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2025-06-28 09:42:22,549] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2025-06-28 09:42:22,550] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2025-06-28 09:42:22,564] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2025-06-28 09:42:22,883] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-T0UVI8B:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2025-06-28 09:42:23,282] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(food_orders_topic-0 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2025-06-28 09:42:23,289] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=food_orders_topic,Partition=0,Replica=0]. Halting deletion for topics Set(food_orders_topic) (kafka.controller.TopicDeletionManager)
[2025-06-28 09:42:23,300] INFO [Topic Deletion Manager 0] Halted deletion of topics food_orders_topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2025-06-28 09:42:23,301] INFO [Topic Deletion Manager 0] Handling deletion for topics food_orders_topic (kafka.controller.TopicDeletionManager)
[2025-06-28 09:42:23,304] DEBUG [Topic Deletion Manager 0] Retrying deletion of topics food_orders_topic since replicas [Topic=food_orders_topic,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2025-06-28 09:48:20,849] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2025-06-28 09:48:20,887] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2025-06-28 09:48:20,890] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2025-06-28 09:48:20,895] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2025-06-28 09:48:20,900] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2025-06-28 09:48:20,904] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2025-06-28 09:48:20,921] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 104) (kafka.controller.KafkaController)
[2025-06-28 09:48:20,943] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2025-06-28 09:48:20,966] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2025-06-28 09:48:20,975] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2025-06-28 09:48:20,976] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2025-06-28 09:48:20,977] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2025-06-28 09:48:20,977] INFO [Controller id=0] Current list of topics in the cluster: HashSet(food_orders_topic, food_order_topic) (kafka.controller.KafkaController)
[2025-06-28 09:48:20,978] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2025-06-28 09:48:20,983] INFO [Controller id=0] List of topics to be deleted: food_orders_topic (kafka.controller.KafkaController)
[2025-06-28 09:48:20,983] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2025-06-28 09:48:20,983] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2025-06-28 09:48:20,984] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(food_orders_topic), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2025-06-28 09:48:20,987] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2025-06-28 09:48:21,012] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 09:48:21,020] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 09:48:21,053] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 09:48:21,054] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=food_order_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=food_orders_topic,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 09:48:21,056] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2025-06-28 09:48:21,062] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2025-06-28 09:48:21,064] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(food_orders_topic-0 -> OfflinePartition, food_order_topic-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2025-06-28 09:48:21,065] INFO [Controller id=0] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2025-06-28 09:48:21,069] INFO [Topic Deletion Manager 0] Handling deletion for topics food_orders_topic (kafka.controller.TopicDeletionManager)
[2025-06-28 09:48:21,072] INFO [Topic Deletion Manager 0] Deletion of topic food_orders_topic (re)started (kafka.controller.TopicDeletionManager)
[2025-06-28 09:48:21,128] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2025-06-28 09:48:21,128] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2025-06-28 09:48:21,128] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2025-06-28 09:48:21,129] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2025-06-28 09:48:21,133] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2025-06-28 09:48:21,150] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2025-06-28 09:48:21,535] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-T0UVI8B:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2025-06-28 09:48:21,800] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(food_orders_topic-0 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2025-06-28 09:48:21,805] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=food_orders_topic,Partition=0,Replica=0]. Halting deletion for topics Set(food_orders_topic) (kafka.controller.TopicDeletionManager)
[2025-06-28 09:48:21,811] INFO [Topic Deletion Manager 0] Halted deletion of topics food_orders_topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2025-06-28 09:48:21,811] INFO [Topic Deletion Manager 0] Handling deletion for topics food_orders_topic (kafka.controller.TopicDeletionManager)
[2025-06-28 09:48:21,814] DEBUG [Topic Deletion Manager 0] Retrying deletion of topics food_orders_topic since replicas [Topic=food_orders_topic,Partition=0,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2025-06-28 09:49:42,889] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2025-06-28 09:49:42,968] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2025-06-28 09:49:42,974] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2025-06-28 09:49:43,061] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2025-06-28 09:49:43,070] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2025-06-28 09:49:43,076] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2025-06-28 09:49:43,081] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2025-06-28 09:49:43,115] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2025-06-28 09:49:43,126] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2025-06-28 09:49:43,138] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2025-06-28 09:49:43,147] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2025-06-28 09:49:43,149] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2025-06-28 09:49:43,149] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2025-06-28 09:49:43,150] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2025-06-28 09:49:43,150] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2025-06-28 09:49:43,153] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2025-06-28 09:49:43,154] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2025-06-28 09:49:43,154] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2025-06-28 09:49:43,155] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2025-06-28 09:49:43,157] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2025-06-28 09:49:43,176] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 09:49:43,179] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 09:49:43,198] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 09:49:43,198] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2025-06-28 09:49:43,199] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2025-06-28 09:49:43,200] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2025-06-28 09:49:43,208] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2025-06-28 09:49:43,209] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2025-06-28 09:49:43,218] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2025-06-28 09:49:43,220] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2025-06-28 09:49:43,221] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2025-06-28 09:49:43,223] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2025-06-28 09:49:43,228] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2025-06-28 09:49:43,268] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2025-06-28 09:49:43,687] INFO [RequestSendThread controllerId=0] Controller 0 connected to DESKTOP-T0UVI8B:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2025-06-28 09:49:48,281] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-06-28 09:49:48,283] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-06-28 09:52:17,786] INFO [Controller id=0] New topics: [Set(anubhav_orders_topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(anubhav_orders_topic,Some(G85C0rnlSumHLknnGTyngA),Map(anubhav_orders_topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2025-06-28 09:52:17,790] INFO [Controller id=0] New partition creation callback for anubhav_orders_topic-0 (kafka.controller.KafkaController)
[2025-06-28 09:54:22,653] INFO [Controller id=0] New topics: [Set(food_orders_topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(food_orders_topic,Some(ACj5ERaKR2i_EflyVgzg-Q),Map(food_orders_topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2025-06-28 09:54:22,653] INFO [Controller id=0] New partition creation callback for food_orders_topic-0 (kafka.controller.KafkaController)
[2025-06-28 09:54:48,289] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-06-28 09:54:48,290] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-06-28 09:54:48,295] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2025-06-28 09:54:48,299] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-06-28 09:56:54,271] INFO [Controller id=0] New topics: [Set(food_order_topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(food_order_topic,Some(06pUWG6tSmWb6bMNz2jjuA),Map(food_order_topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2025-06-28 09:56:54,271] INFO [Controller id=0] New partition creation callback for food_order_topic-0 (kafka.controller.KafkaController)
[2025-06-28 09:56:54,336] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(FOo61bgVRRm8o5vYZD57YA),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2025-06-28 09:56:54,339] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2025-06-28 09:59:48,316] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-06-28 09:59:48,316] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-06-28 09:59:48,320] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2025-06-28 09:59:48,321] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2025-06-28 10:00:55,880] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2025-06-28 10:00:55,892] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2025-06-28 10:04:48,334] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2025-06-28 10:04:48,335] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2025-06-28 10:04:48,339] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2025-06-28 10:04:48,340] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
